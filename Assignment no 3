[ec2-user@ip-172-31-46-14 ~]$ minikube start
* minikube v1.30.1 on Amazon 2023
* Using the docker driver based on existing profile
* Starting control plane node minikube in cluster minikube
* Pulling base image ...
* Restarting existing docker container for "minikube" ...
* Preparing Kubernetes v1.26.3 on Docker 23.0.2 ...
* Configuring bridge CNI (Container Networking Interface) ...
* Verifying Kubernetes components...
  - Using image gcr.io/k8s-minikube/storage-provisioner:v5
  - Using image docker.io/kubernetesui/dashboard:v2.7.0
  - Using image docker.io/kubernetesui/metrics-scraper:v1.0.8
* Some dashboard features require the metrics-server addon. To enable all features please run:

        minikube addons enable metrics-server


* Enabled addons: storage-provisioner, default-storageclass, dashboard
* Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default
[ec2-user@ip-172-31-46-14 ~]$ kubectl create namespace namespace1
namespace/namespace1 created
[ec2-user@ip-172-31-46-14 ~]$ kubectl create namespace namespace2
namespace/namespace2 created
[ec2-user@ip-172-31-46-14 ~]$ kubectl create deployment nginx-deployment --image=nginx --namespace=namespace1
deployment.apps/nginx-deployment created
[ec2-user@ip-172-31-46-14 ~]$ kubectl expose deployment nginx-deployment --port=80 --type=NodePort --namespace=namespace1
service/nginx-deployment exposed
[ec2-user@ip-172-31-46-14 ~]$ kubectl get pods --namespace=namespace1
NAME                                READY   STATUS    RESTARTS   AGE
nginx-deployment-55888b446c-xqz9w   1/1     Running   0          35s
[ec2-user@ip-172-31-46-14 ~]$ kubectl create deployment busybox-deployment --image=busybox --namespace=namespace2
deployment.apps/busybox-deployment created
[ec2-user@ip-172-31-46-14 ~]$ kubectl run busybox-pod --image=busybox -n namespace2 --rm -it -- sh
If you don't see a command prompt, try pressing enter.
/ # 
/ # 
/ # wget -O- nginx-deployment.namespace1:80
Connecting to nginx-deployment.namespace1:80 (10.99.210.172:80)
writing to stdout
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
-                    100% |**************************************************************************************************************|   615  0:00:00 ETA
written to stdout
/ # has context menu^C

/ # 
